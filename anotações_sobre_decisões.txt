Com base nisso, uma ontologia contendo operações do domínio da biologia foi importada no ramo ontoexpline:domain, e 

O fluxo de utilização da API é executado de acordo com as dependências das entidades definidas na especificação do workflow. Dessa forma, a especificação é definida em
dois passos principais: Definição estrutural, e definição e relacionamento de entidades.

O primeiro passo é dividido em duas partes, a primeira relacionda ao nível de abstração do experimento, e a segunda, relacionda a definição estrutural de metadados.
Na primeira etapa, é especificada a definição das operações de domínio a serem utilizadas na definição do nível de abstração do experimento. Dessa forma é necessário definir
quais os tipos de operações serão especificadas na definição abstrata do workflow de acordo com uma ontologia de domínio previamente adicionada na ontoexpline.
Dessa forma, o primeiro passo é realizado com a utilização da função define_domain_operation(p1, p2, p3). Essa função recebe como parametros a ontoexpline, 
o domínio a ser utilizado, e a operação de domínio pertencente ao domínio. Tal função verifica a existencia da operação naquele domínio, e caso seja válida 
a torna apta a utilização na especificação do workflow.
A segunda etapa é voltada a definição de tipos de metadados a serem agregados às entidades ontoexpline. Tal etapa é importante visto a vasta possibilidade de agregar informações 
a determinados tipos de entidades. Para essa instanciação é necessário utilizar a função create_metadata_type(p1,p2, p3). A função de definição de tipos de metadados
recebe como parametros a ontoexpline, um identificador para o tipo que esta sendo definido, e sua descrição, que é adicionada em forma de anotações. 
De forma análoga a definição de metadados, a definição de anotações sobre entidades pode ser feita de forma universal, por meio da função insert_annotation(p1, p2, p3)
que recebe como parametros a ontologia, a entidade que receberá a anotação, e o conteúdo a ser adicionado como anotação.

O segundo passo relativo a definição e relacionamento de entidades, diz respeito a especificação de itens concretos e abstratos do workflow. Nesse passo as entidades
são definidas de forma paralela, ou seja, itens concretos e abstratos podem ser definidos concomitantemente, dessa forma, questões de dependencias são verificadas
buscando manter a coerência da especificação. A primeira operação a ser realizada é a definição de programas aplicados as atividades. Dessa forma, deve-se utilizar
a função create_program(p1, p2, p3). Tal função recebe alem da ontologia, um identificador unido do programa, bem como sua classificação relativa a operações de domínio
definida no passo anterior. Dessa forma os programas devem necessariamente ser tipados de acordo com uma operação de domínio válida. Após a definição da instância,
são definidos seus atributos concretos relacionados aos itens de dado produzidos por ele. Os atributos concretos são definidos como elementos provONE:Port e são
diretamente relacionados com elementos do tipo provONE:Program. Paralelo a isso são definidos também atributos abstratos classificados como ExpLine.Attribute
***PRECISA MELHORAR A EXPLICAÇÃO DA RELAÇÃO DE ATRIBUTOS CONCRETOS E ABSTRATOS***

A próxima etapa deste passo é definir relações abstratas compostas por atributos abstratos, bem como associa-las. Para isso são utilizadas duas funções principais:
a primeira create_relation(p1, p2), recebe a ontoexpline e um identificador de entidade. De forma análoga aos demais indivíduos, é verificado se a porta sendo 
criada, existe na estrutura, caso exista, não é inserida. A segunda etapa é executada pela função associate_relation_to_attributes(p1, p2, list(p3)).
A função de associação recebe como parametro a ontoexpline, o objeto do tipo ExpLine.Relation criado previamente, e uma lista de atributos que a compõem.

--------------------------------------------------------------Texto para o overleaf-------------------------------------------------------------------------------------
O processo de avaliação da ontologia foi feito mapeando um workflow filogenômico, instanciando componentes e relacionando-os de acordo com classes e propriedades definidas
na ontologia. Foi utilizada a linguagem python3.6 e aplicada a API OwlReady2. O primeiro passo que antecede o processo de instanciação e relacionamentos de indivíduos, é
o processo de especialização da OntoExpLine visto o seu perfil multi-domínio e flexibilidade na definição do nível de abstração das atividades executadas pelo workflow. 
O Segundo passo por sua vez, é relativo a especificação dos componentes do workflow que servirá de base para gerar as derivações. O fluxo de atividades envolvida nesses 
dois passos são exibidos na Figura X.

No processo de especialização da ontoexpline, são definidas as operações executadas pelo workflow em com base em definições específicas do contexto do workflow. 
Dessa forma, a partir de um conjunto de entidades importadas de uma ontologia de domínio, é possível identificar e especificar as operações relevantes no âmbito do experimento a ser executado.
A instanciação das operações a serem executadas é necessária visto a possibilidade de aumentar ou diminuir o nível de granularidade por parte de cada atividade, 
visto que macroatividades são compostas por microatividades, e dependendo do conjunto dos dados necessários para análise, se faz necessário definir operações de nível
específico. Dessa forma, o primeiro passo da especificação da OntoExpLine pode ser entendida como instânciação da métrica aplicada relativa ao nível de abstração a ser empregado.

O próximo passo da etapa de especificação é relacionado à definição do conjunto de metadados que serão utilizados para agregar informações aos componentes do workflow. A partir
disso percebe-se que além da flexibilidade relacionada ao nível de abstração e independencia de domínio, a OntoExpLine possibilita que o cientista defina quais tipos de 
metadados serão agregados aos elementos, fazendo com que todos os elementos estruturais definidos neste ramo sejam de fato aplicados, tornando o ramo compacto e funcional.

A terceira operação de especialização é sobre a definição dos perfis dos programas a serem especificados. Tal operação é necessária pois além de classificar programas, é utilizada 
para agregar metadados específicos a determinados programas como serviços executados em nuvem, ou programas de código aberto/proprietários. A tipagem definida neste passo, é
utilizada pela última atividade de especificação, onde são definidos módulos de metadados genéricos e específicos de acordo com o tipo de programa definido pelo usuário.
